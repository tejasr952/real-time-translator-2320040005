# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KNIMinpIJ_P79gxCLIAZhDOrngEyqkXF
"""

def graph_coloring(graph, colors):
    color_assignment = [None] * len(graph)

    if graph_coloring_util(graph, colors, color_assignment, 0):
        return color_assignment
    else:
        return None

def graph_coloring_util(graph, colors, color_assignment, node):
    if node == len(graph):
        return True

    for color in colors:
        if is_safe_to_color(graph, color_assignment, node, color):
            color_assignment[node] = color
            if graph_coloring_util(graph, colors, color_assignment, node + 1):
                return True
            color_assignment[node] = None

    return False

def is_safe_to_color(graph, color_assignment, node, color):
    for neighbor in graph[node]:
        if color_assignment[neighbor] == color:
            return False
    return True

# Example usage
graph = [[1, 2], [0, 2], [0, 1]]  # Example graph adjacency list
colors = ['red', 'green', 'blue']
print(graph_coloring(graph, colors))